{"version":3,"sources":["Card.tsx","hooks/useStateWithLocalStorage.ts","Analytics.tsx","Header.tsx","Settings.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","props","className","title","isLoading","prefix","separator","end","value","useStateWithLocalStorage","localStorageKey","React","useState","localStorage","getItem","setValue","useEffect","setItem","sentToClientListId","Analytics","config","localStorageKeys","trelloApiKey","apiKey","trelloApiToken","apiToken","history","useHistory","push","urls","settings","isCardsLoaded","setIsCardsLoaded","cards","setCards","fetch","then","response","json","data","console","log","total","reduce","summ","c","customFieldItems","number","currentTotal","filter","labels","length","withdrawnTotal","leftToMinimumRedraw","Math","max","Header","to","Settings","setApiKey","setApiToken","style","maxWidth","onSubmit","e","preventDefault","home","htmlFor","type","id","aria-describedby","onChange","target","App","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAuBeA,EAfF,SAACC,GACZ,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,qBAAd,SAAoCD,EAAME,QAC1C,oBAAID,UAAU,0BAAd,SACGD,EAAMG,UACH,cAAC,IAAD,CAASC,OAAO,IAAIC,UAAU,IAAIC,IAAKN,EAAMO,QAC7C,qBCFCC,EAZkB,SAACC,GAAqF,IAAD,EAC1FC,IAAMC,SAC9BC,aAAaC,QAAQJ,IAAoB,IAFyE,mBAC7GF,EAD6G,KACtGO,EADsG,KASpH,OAJAJ,IAAMK,WAAU,WACdH,aAAaI,QAAQP,EAAiBF,KACrC,CAACA,IAEG,CAACA,EAAOO,I,cCDXG,EAAqB,2BAqDZC,EAnDG,WAAO,IAAD,EACLV,EAAyBW,EAAOC,iBAAiBC,cAA3DC,EADe,sBAEHd,EAAyBW,EAAOC,iBAAiBG,gBAA7DC,EAFe,oBAIhBC,EAAUC,cACXJ,GAAWE,GACdC,EAAQE,KAAKR,EAAOS,KAAKC,UANL,MASoBlB,oBAAkB,GATtC,mBASfmB,EATe,KASAC,EATA,OAUIpB,mBAAgB,IAVpB,mBAUfqB,EAVe,KAURC,EAVQ,KAYtBlB,qBAAU,WACmBO,GAAWE,GAItCU,MAAM,kCAAD,OAAmCjB,EAAnC,sBAAmEK,EAAnE,kBAAmFE,EAAnF,2BACFW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZL,EAASK,GACTP,GAAiB,QAEpB,CAACd,EAAoBK,EAAQE,IAEhC,IAAMiB,EAAQT,EAAMU,QAAO,SAACC,EAAMC,GAAP,OAAaD,IAASC,EAAEC,iBAAiB,GAAGtC,MAAMuC,SAAQ,GAC/EC,EAAef,EAAMgB,QAAO,SAAAJ,GAAC,OAAKA,EAAEK,SAAWL,EAAEK,OAAOC,UAAQR,QAAO,SAACC,EAAMC,GAAP,OAAaD,IAASC,EAAEC,iBAAiB,GAAGtC,MAAMuC,SAAQ,GACjIK,EAAiBnB,EAAMgB,QAAO,SAAAJ,GAAC,OAAIA,EAAEK,QAAUL,EAAEK,OAAOC,UAAQR,QAAO,SAACC,EAAMC,GAAP,OAAaD,IAASC,EAAEC,iBAAiB,GAAGtC,MAAMuC,SAAQ,GACjIM,EAAsBC,KAAKC,IAAI,IAAMP,EAAc,GAEzD,OACE,qBAAK9C,UAAU,YAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,CAAMC,MAAM,iBAAiBK,MAAOwC,EAAc5C,UAAW2B,MAE/D,qBAAK7B,UAAU,SAAf,SACE,cAAC,EAAD,CAAMC,MAAM,mBAAmBK,MAAO6C,EAAqBjD,UAAW2B,MAExE,qBAAK7B,UAAU,SAAf,SACE,cAAC,EAAD,CAAMC,MAAM,qBAAqBK,MAAO4C,EAAgBhD,UAAW2B,MAErE,qBAAK7B,UAAU,SAAf,SACE,cAAC,EAAD,CAAMC,MAAM,eAAeK,MAAOkC,EAAOtC,UAAW2B,Y,OCzC/CyB,EAZA,WACb,OACE,yBAAQtD,UAAU,qGAAlB,UACE,mBAAGA,UAAU,+BAAb,2BACA,qBAAKA,UAAU,uBAAf,SACE,cAAC,IAAD,CAAMA,UAAU,gBAAgBuD,GAAG,IAAnC,yBAEF,eAAC,IAAD,CAAMvD,UAAU,4BAA4BuD,GAAG,YAA/C,UAA2D,mBAAGvD,UAAU,cAAxE,mBC+BSwD,EArCE,WAAO,IAAD,EACOjD,EAAyBW,EAAOC,iBAAiBC,cADxD,mBACdC,EADc,KACNoC,EADM,OAMWlD,EAAyBW,EAAOC,iBAAiBG,gBAN5D,mBAMdC,EANc,KAMJmC,EANI,KAWflC,EAAUC,cAMhB,OACE,sBAAKzB,UAAU,YAAf,UACE,0CACA,qBAAKA,UAAU,MAAM2D,MAAO,CAACC,SAAU,KAAvC,SACE,uBAAMC,SATS,SAACC,GACpBA,EAAEC,iBACFvC,EAAQE,KAAKR,EAAOS,KAAKqC,OAOrB,UACE,sBAAKhE,UAAU,OAAf,UACE,uBAAOiE,QAAQ,eAAejE,UAAU,aAAxC,4BACA,uBAAOkE,KAAK,OAAOlE,UAAU,eAAemE,GAAG,eAAeC,mBAAiB,YAAY9D,MAAOe,EAAQgD,SAtBzF,SAACP,GAC1BL,EAAUK,EAAEQ,OAAOhE,aAuBb,sBAAKN,UAAU,OAAf,UACE,uBAAOiE,QAAQ,iBAAiBjE,UAAU,aAA1C,8BACA,uBAAOkE,KAAK,OAAOlE,UAAU,eAAemE,GAAG,iBAAiB7D,MAAOiB,EAAU8C,SArB9D,SAACP,GAC5BJ,EAAYI,EAAEQ,OAAOhE,aAsBf,wBAAQ4D,KAAK,SAASlE,UAAU,kBAAhC,2BCNKuE,MAhBf,WACE,OACE,eAAC,IAAD,CAAQC,SAAUC,kBAAlB,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAMzD,EAAOS,KAAKC,SAA/B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAO8C,OAAK,EAAEC,KAAMzD,EAAOS,KAAKqC,KAAhC,SACE,cAAC,EAAD,aCPKY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d146abe8.chunk.js","sourcesContent":["import CountUp from 'react-countup';\r\n\r\nexport interface CardProps {\r\n  isLoading: boolean;\r\n  title: string;\r\n  value: number;\r\n}\r\n\r\nconst Card = (props: CardProps) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h6 className=\"card-subtitle mb-2\">{props.title}</h6>\r\n        <h5 className=\"card-title text-success\">\r\n          {props.isLoading \r\n            ? <CountUp prefix=\"$\" separator=\",\" end={props.value} /> \r\n            : 'Loading...'}\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\nconst useStateWithLocalStorage = (localStorageKey: string): [string, React.Dispatch<React.SetStateAction<string>>] => {\r\n  const [value, setValue] = React.useState(\r\n    localStorage.getItem(localStorageKey) || ''\r\n  );\r\n \r\n  React.useEffect(() => {\r\n    localStorage.setItem(localStorageKey, value);\r\n  }, [value]);\r\n \r\n  return [value, setValue];\r\n};\r\n\r\nexport default useStateWithLocalStorage;","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport useStateWithLocalStorage from \"./hooks/useStateWithLocalStorage\";\r\nimport config from './config.json';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst inQueueListId = '5f4cdb937afb6a829d4ad8e6';\r\nconst inProgressListId = '5f4cdb937afb6a829d4ad8e7';\r\nconst inRevisionListId = '5f4cdb937afb6a829d4ad8ea';\r\nconst completedListId = '5f4cdb937afb6a829d4ad8e8';\r\nconst sentToClientListId = '5f4cdb937afb6a829d4ad8e9';\r\n\r\nconst Analytics = () => {\r\n  const [apiKey] = useStateWithLocalStorage(config.localStorageKeys.trelloApiKey);\r\n  const [apiToken] = useStateWithLocalStorage(config.localStorageKeys.trelloApiToken);\r\n\r\n  const history = useHistory();\r\n  if (!apiKey || !apiToken) {\r\n    history.push(config.urls.settings);\r\n  }\r\n\r\n  const [isCardsLoaded, setIsCardsLoaded] = useState<boolean>(false);\r\n  const [cards, setCards] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    if(!sentToClientListId || !apiKey || !apiToken) {\r\n      return;\r\n    }\r\n\r\n    fetch(`https://api.trello.com/1/lists/${sentToClientListId}/cards?key=${apiKey}&token=${apiToken}&customFieldItems=true`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setCards(data);\r\n        setIsCardsLoaded(true);\r\n      });\r\n  }, [sentToClientListId, apiKey, apiToken]);\r\n\r\n  const total = cards.reduce((summ, c) => summ += +c.customFieldItems[0].value.number, 0);\r\n  const currentTotal = cards.filter(c => !c.labels || !c.labels.length).reduce((summ, c) => summ += +c.customFieldItems[0].value.number, 0);\r\n  const withdrawnTotal = cards.filter(c => c.labels && c.labels.length).reduce((summ, c) => summ += +c.customFieldItems[0].value.number, 0);\r\n  const leftToMinimumRedraw = Math.max(100 - currentTotal, 0);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row gy-3\">\r\n        <div className=\"col-lg\">\r\n          <Card title=\"Current Income\" value={currentTotal} isLoading={isCardsLoaded} />\r\n        </div>\r\n        <div className=\"col-lg\">\r\n          <Card title=\"Left to Withdraw\" value={leftToMinimumRedraw} isLoading={isCardsLoaded} />\r\n        </div>\r\n        <div className=\"col-lg\">\r\n          <Card title=\"Withdrawn Earnings\" value={withdrawnTotal} isLoading={isCardsLoaded} />\r\n        </div>\r\n        <div className=\"col-lg\">\r\n          <Card title=\"Total Income\" value={total} isLoading={isCardsLoaded} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Analytics;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-body border-bottom shadow-sm\">\r\n      <p className=\"h5 my-0 me-md-auto fw-normal\">Work Progress</p>\r\n      <nav className=\"my-2 my-md-0 me-md-3\">\r\n        <Link className=\"p-2 text-dark\" to=\"/\">Analytics</Link>\r\n      </nav>\r\n      <Link className=\"btn btn-outline-secondary\" to=\"/settings\"><i className=\"fa fa-cog\"></i> Settings</Link>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default Header","import config from './config.json';\r\nimport useStateWithLocalStorage from './hooks/useStateWithLocalStorage';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Settings = () => {\r\n  const [apiKey, setApiKey] = useStateWithLocalStorage(config.localStorageKeys.trelloApiKey);\r\n  const handleApiKeyChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setApiKey(e.target.value);\r\n  }\r\n  \r\n  const [apiToken, setApiToken] = useStateWithLocalStorage(config.localStorageKeys.trelloApiToken);\r\n  const handleApiTokenChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setApiToken(e.target.value);\r\n  }\r\n\r\n  const history = useHistory();\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    history.push(config.urls.home);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Settings</h1>\r\n      <div className=\"row\" style={{maxWidth: 600}}>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"trelloApiKey\" className=\"form-label\">Trello API Key</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"trelloApiKey\" aria-describedby=\"emailHelp\" value={apiKey} onChange={handleApiKeyChange}/>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"trelloApiToken\" className=\"form-label\">Trello API Token</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"trelloApiToken\" value={apiToken} onChange={handleApiTokenChange}/>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","import './App.css';\nimport Analytics from './Analytics';\nimport Header from './Header';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Settings from './Settings';\nimport config from './config.json';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL + '/'}>\n      <Header />\n      <Switch>\n        <Route exact path={config.urls.settings}>\n          <Settings />\n        </Route>\n        <Route exact  path={config.urls.home}>\n          <Analytics />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}