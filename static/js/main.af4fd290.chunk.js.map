{"version":3,"sources":["Components/Card.tsx","hooks/useStateWithLocalStorage.ts","Components/Analytics.tsx","Components/Header.tsx","Components/Settings.tsx","Components/Bills.tsx","Components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Card","props","className","title","isLoading","prefix","separator","end","value","altCurrencyRatio","suffix","useStateWithLocalStorage","localStorageKey","React","useState","localStorage","getItem","setValue","useEffect","setItem","sentToClientListId","getTotal","cards","reduce","summ","c","customFieldItems","number","Analytics","config","localStorageKeys","trelloApiKey","apiKey","trelloApiToken","apiToken","history","useHistory","push","urls","settings","isLoaded","setIsCardsLoaded","undefined","setAltCurrencyRatio","setCards","fetch","then","r","json","data","rates","RUB","console","log","total","currentTotal","filter","labels","length","withdrawnTotal","leftToMinimumRedraw","Math","max","Header","to","home","bills","Settings","setApiKey","setApiToken","style","maxWidth","onSubmit","e","preventDefault","htmlFor","type","id","aria-describedby","onChange","target","getFirstGroup","string","regex","match","exec","trim","getShortDescription","card","orderNumber","desc","orderType","Bills","unpaidCards","scope","align","textAlign","map","i","toFixed","colSpan","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af4fd290.chunk.js","sourcesContent":["import CountUp from 'react-countup';\r\n\r\nexport interface CardProps {\r\n  isLoading: boolean;\r\n  title: string;\r\n  value: number;\r\n  altCurrencyRatio?: number;\r\n}\r\n\r\nconst Card = (props: CardProps) => {\r\n  return (\r\n    <div className=\"card bg-light bg-gradient\">\r\n      <div className=\"card-body\">\r\n        <h6 className=\"card-subtitle mb-2\">{props.title}</h6>\r\n        <h5 className=\"card-title text-success\">\r\n          {props.isLoading \r\n            ? <>\r\n                <CountUp prefix=\"$\" separator=\",\" end={props.value} />\r\n                {props.altCurrencyRatio && <><span> / </span><CountUp prefix=\"~\" suffix=\" â‚½\" separator=\",\" end={props.value * props.altCurrencyRatio} /></>} \r\n              </>\r\n            : 'Loading...'}\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\nconst useStateWithLocalStorage = (localStorageKey: string): [string, React.Dispatch<React.SetStateAction<string>>] => {\r\n  const [value, setValue] = React.useState(\r\n    localStorage.getItem(localStorageKey) || ''\r\n  );\r\n \r\n  React.useEffect(() => {\r\n    localStorage.setItem(localStorageKey, value);\r\n  }, [value]);\r\n \r\n  return [value, setValue];\r\n};\r\n\r\nexport default useStateWithLocalStorage;","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport useStateWithLocalStorage from \"../hooks/useStateWithLocalStorage\";\r\nimport config from '../config.json';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { TrelloCard } from \"../types\";\r\n\r\nconst inQueueListId = '5f4cdb937afb6a829d4ad8e6';\r\nconst inProgressListId = '5f4cdb937afb6a829d4ad8e7';\r\nconst inRevisionListId = '5f4cdb937afb6a829d4ad8ea';\r\nconst completedListId = '5f4cdb937afb6a829d4ad8e8';\r\nconst sentToClientListId = '5f4cdb937afb6a829d4ad8e9';\r\n\r\nconst getTotal = (cards: TrelloCard[]): number => {\r\n  return cards.reduce((summ, c) => summ += +c.customFieldItems[0].value.number, 0);\r\n}\r\n\r\nconst Analytics = () => {\r\n  const [apiKey] = useStateWithLocalStorage(config.localStorageKeys.trelloApiKey);\r\n  const [apiToken] = useStateWithLocalStorage(config.localStorageKeys.trelloApiToken);\r\n\r\n  const history = useHistory();\r\n  if (!apiKey || !apiToken) {\r\n    history.push(config.urls.settings);\r\n  }\r\n\r\n  const [isLoaded, setIsCardsLoaded] = useState<boolean>(false);\r\n  const [altCurrencyRatio, setAltCurrencyRatio] = useState<number | undefined>(undefined);\r\n  const [cards, setCards] = useState<TrelloCard[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.exchangeratesapi.io/latest?&base=USD&symbols=RUB')\r\n      .then(r => r.json())\r\n      .then(data => {\r\n        setAltCurrencyRatio(data.rates.RUB);\r\n      });\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(!sentToClientListId || !apiKey || !apiToken) {\r\n      return;\r\n    }\r\n\r\n    fetch(`https://api.trello.com/1/lists/${sentToClientListId}/cards?key=${apiKey}&token=${apiToken}&customFieldItems=true`)\r\n      .then(r => r.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setCards(data);\r\n        setIsCardsLoaded(true);\r\n      });\r\n  }, [sentToClientListId, apiKey, apiToken]);\r\n\r\n\r\n  const total = getTotal(cards);\r\n  const currentTotal = getTotal(cards.filter(c => !c.labels || !c.labels.length));\r\n  const withdrawnTotal = getTotal(cards.filter(c => c.labels && c.labels.length));\r\n  const leftToMinimumRedraw = Math.max(100 - currentTotal, 0);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row gy-3\">\r\n        <div className=\"col-lg\">\r\n          <Card title=\"Current Income\" value={currentTotal} isLoading={isLoaded} altCurrencyRatio={altCurrencyRatio} />\r\n        </div>\r\n        <div className=\"col-lg\">\r\n          <Card title=\"Left to Withdraw\" value={leftToMinimumRedraw} isLoading={isLoaded} altCurrencyRatio={altCurrencyRatio} />\r\n        </div>\r\n        <div className=\"col-lg\">\r\n          <Card title=\"Withdrawn Earnings\" value={withdrawnTotal} isLoading={isLoaded} altCurrencyRatio={altCurrencyRatio} />\r\n        </div>\r\n        <div className=\"col-lg\">\r\n          <Card title=\"Total Income\" value={total} isLoading={isLoaded} altCurrencyRatio={altCurrencyRatio} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Analytics;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport config from '../config.json';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-body border-bottom shadow-sm\">\r\n      <p className=\"h5 my-0 me-md-auto fw-normal\">Work Progress</p>\r\n      <nav className=\"my-2 my-md-0 me-md-3\">\r\n        <Link className=\"p-2 text-dark\" to={config.urls.home}>Analytics</Link>\r\n        <Link className=\"p-2 text-dark\" to={config.urls.bills}>Bills</Link>\r\n        <Link className=\"p-2 text-dark\" to={config.urls.settings}>Settings</Link>\r\n      </nav>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default Header","import config from '../config.json';\r\nimport useStateWithLocalStorage from '../hooks/useStateWithLocalStorage';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Settings = () => {\r\n  const [apiKey, setApiKey] = useStateWithLocalStorage(config.localStorageKeys.trelloApiKey);\r\n  const handleApiKeyChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setApiKey(e.target.value);\r\n  }\r\n  \r\n  const [apiToken, setApiToken] = useStateWithLocalStorage(config.localStorageKeys.trelloApiToken);\r\n  const handleApiTokenChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setApiToken(e.target.value);\r\n  }\r\n\r\n  const history = useHistory();\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    history.push(config.urls.home);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Settings</h1>\r\n      <div className=\"row\" style={{maxWidth: 600}}>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"trelloApiKey\" className=\"form-label\">Trello API Key</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"trelloApiKey\" aria-describedby=\"emailHelp\" value={apiKey} onChange={handleApiKeyChange}/>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"trelloApiToken\" className=\"form-label\">Trello API Token</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"trelloApiToken\" value={apiToken} onChange={handleApiTokenChange}/>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport useStateWithLocalStorage from \"../hooks/useStateWithLocalStorage\";\r\nimport config from '../config.json';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { TrelloCard } from \"../types\";\r\n\r\nconst inQueueListId = '5f4cdb937afb6a829d4ad8e6';\r\nconst inProgressListId = '5f4cdb937afb6a829d4ad8e7';\r\nconst inRevisionListId = '5f4cdb937afb6a829d4ad8ea';\r\nconst completedListId = '5f4cdb937afb6a829d4ad8e8';\r\nconst sentToClientListId = '5f4cdb937afb6a829d4ad8e9';\r\n\r\nconst getTotal = (cards: TrelloCard[]): number => {\r\n  return cards.reduce((summ, c) => summ += +c.customFieldItems[0].value.number, 0);\r\n}\r\n\r\nconst getFirstGroup = (string: string, regex: RegExp): string => {\r\n  const match = regex.exec(string);\r\n  return match && match[1] ? match[1].trim() : '';\r\n}\r\n\r\nconst getShortDescription = (card: TrelloCard): string => {\r\n  const orderNumber = getFirstGroup(card.desc, /Order Number:(.+)$/gm);\r\n  const orderType = getFirstGroup(card.desc, /Order Type:(.+)$/gm);\r\n\r\n  return `${orderNumber} (${orderType})`;\r\n}\r\n\r\nconst Bills = () => {\r\n  const [apiKey] = useStateWithLocalStorage(config.localStorageKeys.trelloApiKey);\r\n  const [apiToken] = useStateWithLocalStorage(config.localStorageKeys.trelloApiToken);\r\n\r\n  const history = useHistory();\r\n  if (!apiKey || !apiToken) {\r\n    history.push(config.urls.settings);\r\n  }\r\n\r\n  const [isLoaded, setIsCardsLoaded] = useState<boolean>(false);\r\n  const [altCurrencyRatio, setAltCurrencyRatio] = useState<number | undefined>(undefined);\r\n  const [cards, setCards] = useState<TrelloCard[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.exchangeratesapi.io/latest?&base=USD&symbols=RUB')\r\n      .then(r => r.json())\r\n      .then(data => {\r\n        setAltCurrencyRatio(data.rates.RUB);\r\n      });\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!sentToClientListId || !apiKey || !apiToken) {\r\n      return;\r\n    }\r\n\r\n    fetch(`https://api.trello.com/1/lists/${sentToClientListId}/cards?key=${apiKey}&token=${apiToken}&customFieldItems=true`)\r\n      .then(r => r.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setCards(data);\r\n        setIsCardsLoaded(true);\r\n      });\r\n  }, [sentToClientListId, apiKey, apiToken]);\r\n\r\n\r\n  const unpaidCards = cards.filter(c => !c.labels || !c.labels.length);\r\n  const currentTotal = getTotal(unpaidCards);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row gy-3\">\r\n        <h1>Unpaid Orders</h1>\r\n        <table className=\"table table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Description</th>\r\n              <th scope=\"col\" align=\"right\" style={{textAlign: 'right'}}>Coast (USD)</th>\r\n              <th scope=\"col\" align=\"right\" style={{textAlign: 'right'}}>Alt Coast (RUB)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {unpaidCards.map((c, i) =>\r\n              <tr key={c.id}>\r\n                <th scope=\"row\">{i + 1}</th>\r\n                <td>{getShortDescription(c)}</td>\r\n                <td align=\"right\">${c.customFieldItems[0].value.number}</td>\r\n                <td align=\"right\">{altCurrencyRatio ? `${(c.customFieldItems[0].value.number * altCurrencyRatio).toFixed(2)}â‚½` : 'N/A'} </td>\r\n              </tr>\r\n            )}\r\n            <tr className=\"table-success\">\r\n              <th scope=\"row\">Total</th>\r\n              <td colSpan={2} align=\"right\"><b>${currentTotal}</b></td>\r\n              <td align=\"right\"><b>{altCurrencyRatio ? `${(currentTotal * altCurrencyRatio).toFixed(2)}â‚½` : 'N/A'}</b></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Bills;","import './App.css';\nimport Analytics from './Analytics';\nimport Header from './Header';\nimport React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Settings from './Settings';\nimport config from '../config.json';\nimport Bills from './Bills';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path={config.urls.settings} component={Settings} />\n        <Route exact path={config.urls.bills} component={Bills} />\n        <Route exact path={config.urls.home} component={Analytics} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}